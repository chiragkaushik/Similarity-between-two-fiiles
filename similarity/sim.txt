// Convert this code into a parsable file

import java.io.*;
import java.util.*;
public class Similarity
{
    static int total=0;
    static int t[][]=new int[5][200];
    double idf[]=new double[200];
    static int frequency(String st,int i,String word[],int freq[][])throws IOException
    {
        
        StringTokenizer data=new StringTokenizer(st);
        int n,j,k,f=0;
        String st1;
        n=data.countTokens();
        
        for(k=0;k<n;k++)
        {
            f=0;
            st1=data.nextToken();
            
            for(j=0;j<200;j++)
            {
                if(word[j]==null||word[j]==" ")
                {
                    f=0;
                    break;
                }
                
                if(word[j].equalsIgnoreCase(st1))
                {
                    f=1;
                    freq[i-1][j]++;
                    
                    break;
                }
            }
            if(f==0)
            {
                total++;
                word[j]=st1;
                freq[i-1][j]++;
            }         
        }
        return n;
    }
     static void display(String word[],int freq[][],int i,double idf[])
    {
        int j;
        System.out.println("word \t freq");
        for(j=0;j<200;j++)
        {
            if(word[j]==null)
            break;
            System.out.println((j+1)+"\t"+word[j]+" \t \t "+freq[i-1][j]+"\t"+idf[j]);
        }
    }
    static void tf_cal(double tf[][],int freq[][],int i,int n)
    {
        int j;
        for(j=0;j<n;j++)
        {
            tf[i-1][j]=(double)freq[i-1][j]/n;
            //System.out.println(j+"--"+freq[i-1][j]+"--"+tf[i-1][j]);
        }
        
    }
    static void idf_cal(double idf[],int freq[][],int i)
    {
        for(int j=0;j<total;j++)
        {
            if(freq[i-1][j]!=0)
            idf[j]=Math.log((double)4/freq[i-1][j]);
           
        }        
    }
    static void avgwordweight(int freq[][],double aww[],int i)
    {
        for(int j=0;j<total;j++)
        {
            aww[j]=(double)freq[i-1][j]/total;
        } 
    }
    static void worddiff(double tf_idf[][],double wd[],int l,int m)
    {
        int j;
        for(j=0;j<total;j++)
        {
            wd[j]=0;
            if(tf_idf[l-1][j]<tf_idf[m-1][j])
            wd[j]=tf_idf[m-1][j]-tf_idf[l-1][j];
            if(tf_idf[l-1][j]>tf_idf[m-1][j])
            wd[j]=tf_idf[l-1][j]-tf_idf[m-1][j];
        }        
    }
    public static void main(String args[]) throws IOException
    {
        InputStreamReader read=new InputStreamReader(System.in);
        BufferedReader in=new BufferedReader(read);
        FileReader fin1=new FileReader("z1.txt");
        BufferedReader bin1=new BufferedReader(fin1);
         FileReader fin2=new FileReader("z2.txt");
        BufferedReader bin2=new BufferedReader(fin2);
         FileReader fin3=new FileReader("z3.txt");
        BufferedReader bin3=new BufferedReader(fin3);
         FileReader fin4=new FileReader("z4.txt");
         BufferedReader bin4=new BufferedReader(fin4);
          FileWriter fout=new FileWriter("z.txt");
        BufferedWriter bout=new BufferedWriter(fout);
        PrintWriter pout=new PrintWriter(bout);
        String st,st1;
        int i=0,j;
        String word[]=new String[200];
        int freq[][]=new int[5][200];
        double aww[]=new double[200];    //to find average word weight
        double wd[]=new double[200];           //to find word difference 
        double tf[][]=new double[5][200];
        double idf[]=new double[200];
        double tf_idf[][]=new double[5][200];
        
        int t[]=new int[5];
        for(i=0;i<4;i++)
        {
            for(j=0;j<200;j++)
            {
                freq[i][j]=0;
                
            }
        }
        for(i=0;i<200;i++)
        {
            word[i]=null;
            aww[i]=0;
            
        }
        while((st=bin1.readLine())!=null)
        {
            pout.println(st);
            t[0]=frequency(st,1,word,freq);    
            
            //System.out.println(t[0]);
        }
        tf_cal(tf,freq,1,t[0]);
       // display(word,freq,1);
        while((st=bin2.readLine())!=null)
        {
            pout.println(st);
            t[1]=frequency(st,2,word,freq); 
             //System.out.println(t[1]);
        }
        tf_cal(tf,freq,2,t[1]);
        //display(word,freq,2);
        while((st=bin3.readLine())!=null)
        {
            pout.println(st);
            t[2]=frequency(st,3,word,freq);
             //System.out.println(t[2]);
        }
        tf_cal(tf,freq,2,t[2]);
        //display(word,freq,3);
        while((st=bin4.readLine())!=null)
        {
            pout.println(st);
            t[3]=frequency(st,4,word,freq);
            // System.out.println(t[3]);
        }
        tf_cal(tf,freq,3,t[3]);
       // display(word,freq,4);
         pout.close();
        bout.close();
        fout.close();  
        FileReader fin=new FileReader("z.txt");
        BufferedReader bin=new BufferedReader(fin);        
        i=0;
        
        //calculate freq of each word in the large file        
        while((st=bin.readLine())!=null)
        {
            t[4]=frequency(st,5,word,freq);           
            i++;
            System.out.print(i+" ." );
            System.out.println(st);          
        }    
        idf_cal(idf,freq,5);
        for(i=0;i<4;i++)
        {
            for(j=0;j<200;j++)
            {
                tf_idf[i][j]=tf[i][j]*idf[j];
            }
        }
        // System.out.println(total);
        
       // display(word,freq,5,idf);
        //average word weight
        avgwordweight(freq,aww,5);
        //word difference
        System.out.println("Enter the file number whose similarity is to be calculated ");
        int l,m;
        l=Integer.parseInt(in.readLine());
        m=Integer.parseInt(in.readLine());
        worddiff(tf_idf,wd,l,m);
        double exp=0;
        for(i=0;i<total;i++)
        {
            exp=exp+aww[i]*aww[i]*wd[i];
        }
        double result=0;
        result=Math.pow(2.718,(-1*exp));
        System.out.println("Similarity between two files = "+result); 
        
    }
}
